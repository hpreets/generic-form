<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>53.0</apiVersion>
    <assignments>
        <name>addOpportunityAllocationsMC</name>
        <label>addOpportunityAllocationsMC</label>
        <locationX>270</locationX>
        <locationY>1271</locationY>
        <assignmentItems>
            <assignToReference>updatedOpportunityAllocationsMC</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>loopOpportunityAllocationsMC</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loopOpportunityAllocationsMC</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>addOpportunityAllocationsUSD</name>
        <label>addOpportunityAllocationsUSD</label>
        <locationX>754</locationX>
        <locationY>935</locationY>
        <assignmentItems>
            <assignToReference>UpdatedOpportunityAllocationsUSD</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>loopOpportunityAllocationsUSD</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loopOpportunityAllocationsUSD</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns value based on Currency Exchange Rate in USD</description>
        <name>AssignMCAllocationValues</name>
        <label>AssignMCAllocationValues</label>
        <locationX>270</locationX>
        <locationY>1151</locationY>
        <assignmentItems>
            <assignToReference>loopOpportunityAllocationsMC.Allocation_USD_Expected_Amount__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>MCAllocationExpectedAmt</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>loopOpportunityAllocationsMC.Allocation_Expected_Amount__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AllocationAmountxOpportunityProb</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>loopOpportunityAllocationsMC.Allocation_USD_Close_Amount__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>MCAllocationReceivedAmt</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>addOpportunityAllocationsMC</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns value</description>
        <name>AssignUSDAllocationValues</name>
        <label>AssignUSDAllocationValues</label>
        <locationX>754</locationX>
        <locationY>815</locationY>
        <assignmentItems>
            <assignToReference>loopOpportunityAllocationsUSD.Allocation_USD_Expected_Amount__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AllocationAmountxOpportunityProb</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>loopOpportunityAllocationsUSD.Allocation_USD_Close_Amount__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>USDAllocationCloseAmt</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>loopOpportunityAllocationsUSD.Allocation_Expected_Amount__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AllocationAmountxOpportunityProb</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>addOpportunityAllocationsUSD</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>isCurrencyUSD</name>
        <label>isCurrencyUSD</label>
        <locationX>424</locationX>
        <locationY>455</locationY>
        <defaultConnector>
            <targetReference>USD_Update_Opportunity_Values</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Currency is USD</defaultConnectorLabel>
        <rules>
            <name>Currency_is_USD</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Currency_Type__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>USD</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Opportunity_Open_or_Closed</targetReference>
            </connector>
            <label>Currency Not USD</label>
        </rules>
    </decisions>
    <decisions>
        <name>Opportunity_Open_or_Closed</name>
        <label>Opportunity Open or Closed?</label>
        <locationX>182</locationX>
        <locationY>575</locationY>
        <defaultConnector>
            <targetReference>getExchangeRateOpen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Opportunity Open</defaultConnectorLabel>
        <rules>
            <name>Opportunity_Closed</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Received</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Received as Unconditional Pledge</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Received as Conditional Pledge</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getExchangeRateClosed</targetReference>
            </connector>
            <label>Opportunity Closed</label>
        </rules>
    </decisions>
    <description>Multi Currency Flow 3 - This Flow fires when an Opportunity is updated and pushes updates to related GAU Allocation Records (Optimized)</description>
    <environments>Default</environments>
    <formulas>
        <name>AllocationAmountxOpportunityProb</name>
        <dataType>Currency</dataType>
        <expression>{!loopOpportunityAllocationsUSD.npsp__Amount__c}*{!$Record.Probability}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>MCAllocationExpectedAmt</name>
        <dataType>Currency</dataType>
        <expression>IF(
OR(        
        ISPICKVAL({!loopOpportunityAllocationsMC.npsp__Opportunity__r.StageName}, &quot;Received&quot;),
        ISPICKVAL({!loopOpportunityAllocationsMC.npsp__Opportunity__r.StageName}, &quot;Received as Unconditional Pledge&quot;), 
        ISPICKVAL({!loopOpportunityAllocationsMC.npsp__Opportunity__r.StageName}, &quot;Received as Conditional Pledge&quot;)
         ),
({!loopOpportunityAllocationsMC.npsp__Amount__c}*{!getExchangeRateClosed.Exchange_Rate__c})*{!$Record.Probability},
({!loopOpportunityAllocationsMC.npsp__Amount__c}*{!getExchangeRateOpen.Exchange_Rate__c})*{!$Record.Probability}
)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>MCAllocationReceivedAmt</name>
        <dataType>Currency</dataType>
        <expression>IF(
    OR(        
        ISPICKVAL({!$Record.StageName}, &quot;Received&quot;),
        ISPICKVAL({!$Record.StageName}, &quot;Received as Unconditional Pledge&quot;), 
        ISPICKVAL({!$Record.StageName}, &quot;Received as Conditional Pledge&quot;)
         ), 
       {!loopOpportunityAllocationsMC.npsp__Amount__c}*{!getExchangeRateClosed.Exchange_Rate__c},
    null
)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>MCExpectedAmount</name>
        <dataType>Currency</dataType>
        <expression>({!$Record.Amount}*{!getExchangeRateOpen.Exchange_Rate__c})*{!$Record.Probability}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>MCReceivedAmount</name>
        <dataType>Currency</dataType>
        <expression>{!$Record.Amount}*{!getExchangeRateClosed.Exchange_Rate__c}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>Today</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <formulas>
        <name>USDAllocationCloseAmt</name>
        <dataType>Currency</dataType>
        <expression>IF(
    OR(        
        ISPICKVAL({!$Record.StageName}, &quot;Received&quot;),
        ISPICKVAL({!$Record.StageName}, &quot;Received as Unconditional Pledge&quot;), 
        ISPICKVAL({!$Record.StageName}, &quot;Received as Conditional Pledge&quot;)
         ), 
       {!loopOpportunityAllocationsUSD.Allocation_USD_Close_Amount__c},
    null
)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>USDExpectedAmount</name>
        <dataType>Currency</dataType>
        <expression>{!$Record.Amount}*{!$Record.Probability}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>USDReceivedAmount</name>
        <dataType>Currency</dataType>
        <expression>IF(
    OR(        
        ISPICKVAL({!$Record.StageName}, &quot;Received&quot;),
        ISPICKVAL({!$Record.StageName}, &quot;Received as Unconditional Pledge&quot;), 
        ISPICKVAL({!$Record.StageName}, &quot;Received as Conditional Pledge&quot;)
         ), 
       {!$Record.Amount},
    null
)</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>Opportunity AFTER SAVE Update Allocations {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity AFTER SAVE Update Allocations</label>
    <loops>
        <name>loopOpportunityAllocationsMC</name>
        <label>loopOpportunityAllocationsMC</label>
        <locationX>182</locationX>
        <locationY>1031</locationY>
        <collectionReference>getOpportunityAllocations_0</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignMCAllocationValues</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>updateMCAllocationValues</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>loopOpportunityAllocationsUSD</name>
        <label>loopOpportunityAllocationsUSD</label>
        <locationX>666</locationX>
        <locationY>695</locationY>
        <collectionReference>getOpportunityAllocations_0</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignUSDAllocationValues</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>updateUSDAllocationValues</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>getExchangeRateClosed</name>
        <label>getExchangeRateClosed</label>
        <locationX>50</locationX>
        <locationY>695</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>MC_Closed_Update_Oppty_Values_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Currency__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Currency_Type__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Effective_Date__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.CloseDate</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Exchange_Rate__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getExchangeRateOpen</name>
        <label>getExchangeRateOpen</label>
        <locationX>314</locationX>
        <locationY>695</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>MC_Open_Update_Oppty_Values</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Currency__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Currency_Type__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Effective_Date__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Today</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Exchange_Rate__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getOpportunityAllocations_0</name>
        <label>getOpportunityAllocations</label>
        <locationX>424</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>isCurrencyUSD</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>npsp__Opportunity__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>npsp__Allocation__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>MC_Closed_Update_Oppty_Values_0</name>
        <label>MC Closed Update Oppty Values</label>
        <locationX>50</locationX>
        <locationY>815</locationY>
        <connector>
            <targetReference>loopOpportunityAllocationsMC</targetReference>
        </connector>
        <inputAssignments>
            <field>Close_Amount__c</field>
            <value>
                <elementReference>MCReceivedAmount</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Close_Exchange_Rate__c</field>
            <value>
                <elementReference>getExchangeRateClosed.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Development_Expected_Value__c</field>
            <value>
                <elementReference>MCReceivedAmount</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>MC_Open_Update_Oppty_Values</name>
        <label>MC Open Update Oppty Values</label>
        <locationX>314</locationX>
        <locationY>815</locationY>
        <connector>
            <targetReference>loopOpportunityAllocationsMC</targetReference>
        </connector>
        <inputAssignments>
            <field>Development_Expected_Value__c</field>
            <value>
                <elementReference>MCExpectedAmount</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>updateMCAllocationValues</name>
        <label>updateMCAllocationValues</label>
        <locationX>182</locationX>
        <locationY>1487</locationY>
        <inputReference>updatedOpportunityAllocationsMC</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>updateUSDAllocationValues</name>
        <label>updateUSDAllocationValues</label>
        <locationX>666</locationX>
        <locationY>1151</locationY>
        <inputReference>UpdatedOpportunityAllocationsUSD</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>USD_Update_Opportunity_Values</name>
        <label>USD Update Opportunity Values</label>
        <locationX>666</locationX>
        <locationY>575</locationY>
        <connector>
            <targetReference>loopOpportunityAllocationsUSD</targetReference>
        </connector>
        <inputAssignments>
            <field>Close_Amount__c</field>
            <value>
                <elementReference>USDReceivedAmount</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Development_Expected_Value__c</field>
            <value>
                <elementReference>USDExpectedAmount</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>298</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getOpportunityAllocations_0</targetReference>
        </connector>
        <filterFormula>AND(
 {!$Permission.Flow_Automations_Off}=FALSE,
 AND(
   NOT(ISPICKVAL({!$Record__Prior.StageName}, &quot;Received&quot;)),
   NOT(ISPICKVAL({!$Record__Prior.StageName}, &quot;Received as Unconditional Pledge&quot;)),
   NOT(ISPICKVAL({!$Record__Prior.StageName}, &quot;Received as Conditional Pledge&quot;))
  ),
 OR(   
        {!$Record.Amount}&lt;&gt;{!$Record__Prior.Amount},
        {!$Record.Probability}&lt;&gt; {!$Record__Prior.Probability},
        TEXT( {!$Record.StageName})&lt;&gt;TEXT({!$Record__Prior.StageName})
  )
)</filterFormula>
        <object>Opportunity</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <triggerOrder>1</triggerOrder>
    <variables>
        <name>UpdatedMCAllocationsClose</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>npsp__Allocation__c</objectType>
    </variables>
    <variables>
        <name>updatedOpportunityAllocationsMC</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>npsp__Allocation__c</objectType>
    </variables>
    <variables>
        <name>UpdatedOpportunityAllocationsUSD</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>npsp__Allocation__c</objectType>
    </variables>
    <variables>
        <name>UpdatedUSDAllocationsClose</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>npsp__Allocation__c</objectType>
    </variables>
</Flow>
